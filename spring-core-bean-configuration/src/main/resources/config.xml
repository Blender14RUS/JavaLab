<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans" xmlns:context = "http://www.springframework.org/schema/context"
       xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation = "http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:annotation-config/>

    <bean id="beanA" class="domain.BeanA">
        <property name="stringField" value="odin" />
        <property name="integerField" value="1" />
    </bean>

    <bean id="beanB" class="domain.BeanB">
        <constructor-arg name="beanField" index="0" ref="beanA"/>
        <constructor-arg name="somethingElse" index="1" type="java.lang.String" value="something else"/>
    </bean>

    <bean id="beanC" class="domain.BeanC">
        <property name="something" value="There is a text"/>
        <lookup-method name="getBeanD" bean="beanD"/>
    </bean>

    <bean id="beanD" class="domain.BeanD" scope="prototype">
        <property name="notEmptyField" value="There is a random value #{ T(java.lang.Math).random() * 100.0 }"/>
    </bean>

    <bean id="actionReplacer" class="domain.ActionReplacer"/>

    <bean id="beanE" class="domain.BeanE">
        <property name="name" value="Vladimir"/>
        <replaced-method name="printName" replacer="actionReplacer"/>
    </bean>

    <bean id="beanF" class="domain.BeanF" init-method="init" destroy-method="destroy">
        <property name="name" value="Vladimirovich"/>
    </bean>

    <bean name="BPP" class="domain.BeanPostProcessorImpl"/>

</beans>